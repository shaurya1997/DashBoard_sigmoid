[{"/home/rails/Desktop/sigmoid-assignment/src/Component/Login.js":"1","/home/rails/Desktop/sigmoid-assignment/src/Store/Action/UserAction.js":"2","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/index.js":"3","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/reportWebVitals.js":"4","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/App.js":"5","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/Login.js":"6","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/Error.js":"7","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/Dashboard.js":"8","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Store.js":"9","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/PieData.js":"10","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/DatePicker.js":"11","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/BarData.js":"12","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/TableData.js":"13","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/DateAction.js":"14","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/Combinereducer.js":"15","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/UserAction.js":"16","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/DashDataAction.js":"17","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/userReducer.js":"18","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/config.js":"19","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/dateReducer.js":"20","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/ActionType.js":"21","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/JwtService/JwtService.js":"22","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/dashDataReducer.js":"23"},{"size":2102,"mtime":1647536351810,"results":"24","hashOfConfig":"25"},{"size":1233,"mtime":1647528824794,"results":"26","hashOfConfig":"25"},{"size":500,"mtime":1647434870729,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1647434870729,"results":"29","hashOfConfig":"28"},{"size":1052,"mtime":1647529479496,"results":"30","hashOfConfig":"28"},{"size":2102,"mtime":1647536351810,"results":"31","hashOfConfig":"28"},{"size":655,"mtime":1647592507564,"results":"32","hashOfConfig":"28"},{"size":2320,"mtime":1647528281281,"results":"33","hashOfConfig":"28"},{"size":264,"mtime":1647439931278,"results":"34","hashOfConfig":"28"},{"size":1411,"mtime":1647518082323,"results":"35","hashOfConfig":"28"},{"size":1394,"mtime":1647536486109,"results":"36","hashOfConfig":"28"},{"size":1104,"mtime":1647528285073,"results":"37","hashOfConfig":"28"},{"size":612,"mtime":1647529176497,"results":"38","hashOfConfig":"28"},{"size":1001,"mtime":1647518447641,"results":"39","hashOfConfig":"28"},{"size":372,"mtime":1647461126987,"results":"40","hashOfConfig":"28"},{"size":1233,"mtime":1647528824794,"results":"41","hashOfConfig":"28"},{"size":1712,"mtime":1647518418541,"results":"42","hashOfConfig":"28"},{"size":721,"mtime":1647448454119,"results":"43","hashOfConfig":"28"},{"size":2654,"mtime":1647459143672,"results":"44","hashOfConfig":"28"},{"size":825,"mtime":1647486493457,"results":"45","hashOfConfig":"28"},{"size":412,"mtime":1647460029794,"results":"46","hashOfConfig":"28"},{"size":493,"mtime":1647518249860,"results":"47","hashOfConfig":"28"},{"size":697,"mtime":1647503874188,"results":"48","hashOfConfig":"28"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yjelwb",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"109mm5h",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rails/Desktop/sigmoid-assignment/src/Component/Login.js",["124"],[],"/home/rails/Desktop/sigmoid-assignment/src/Store/Action/UserAction.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/index.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/reportWebVitals.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/App.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/Login.js",["125"],[],"import { Button, Checkbox, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from \"../Store/Action/UserAction\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [rememberMe, setRememberMe] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { data, isLoading } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (\n      data ||\n      localStorage.getItem(\"access_token\") ||\n      sessionStorage.getItem(\"access_token\")\n    )\n      navigate(\"/dashboard\");\n  }, [data]);\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser(user.email, user.password, rememberMe));\n  };\n\n  return (\n    <>\n      <h1 className=\"login-heading\">Login</h1>\n      <div className=\"App\">\n        <form className=\"form\" autoComplete=\"off\">\n          <TextField\n            id=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            className=\"form-input\"\n            onChange={handleChange}\n          />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            className=\"form-input\"\n            onChange={handleChange}\n          />\n          <div className=\"checkbox\">\n            <Checkbox\n              id=\"rememberMe\"\n              checked={rememberMe}\n              onChange={() => setRememberMe(!rememberMe)}\n            />\n            <Typography className=\"remember\">Remember Me</Typography>\n          </div>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            disabled={isLoading || !user.email || !user.password}\n            onClick={handleSubmit}\n          >\n            Log in\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default Login;\n","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/Error.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/Dashboard.js",["126"],[],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMinMaxdDate } from \"../Store/Action/DateAction\";\n\nimport DatePicker from \"./DatePicker\";\nimport { Button } from \"@mui/material\";\nimport { logout } from \"../Store/Action/UserAction\";\nimport { getDashBoardData } from \"../Store/Action/DashDataAction\";\nimport TableData from \"./TableData\";\nimport PieData from \"./PieData\";\nimport BarData from \"./BarData\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isDateLoading, dateRange } = useSelector((state) => state.date);\n  const { isDashLoading, tableData, pieData, barData } = useSelector(\n    (state) => state.dashData\n  );\n  const { data } = useSelector((state) => state.user);\n  useEffect(() => {\n    if (\n      data ||\n      localStorage.getItem(\"access_token\") ||\n      sessionStorage.getItem(\"access_token\")\n    ) {\n      dispatch(getMinMaxdDate());\n    } else {\n      navigate(\"/\");\n    }\n  }, []);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/\");\n  };\n\n  const handleData = () => {\n    dispatch(\n      getDashBoardData(dateRange[0].toString(), dateRange[1].toString())\n    );\n  };\n  return (\n    <>\n      {isDateLoading ? (\n        <div className=\"parent_loader\">\n          <div className=\"loader\"></div>\n        </div>\n      ) : (\n        <>\n          <div className=\"logout_btn\">\n            <Button\n              variant=\"contained\"\n              onClick={handleLogout}\n              color=\"error\"\n              className=\"logout_button\"\n            >\n              Logout\n            </Button>\n          </div>\n          <div className=\"calender\">\n            <DatePicker />\n            <Button variant=\"contained\" onClick={handleData} className=\"btn\">\n              GET DATA\n            </Button>\n          </div>\n          {isDashLoading ? (\n            <div className=\"parent_loader\">\n              <div className=\"loader\"></div>\n            </div>\n          ) : (\n            <>\n              {tableData.length > 0 && <TableData />}\n              {pieData.length > 0 && <PieData />}\n              {barData.length > 0 && <BarData />}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\nexport default Dashboard;\n","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Store.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/PieData.js",["127"],[],"import { Pie } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport { Chart, ArcElement } from \"chart.js\";\nChart.register(ArcElement);\n\nconst PieData = () => {\n  const { pieData } = useSelector((state) => state.dashData);\n  let labels = [];\n  let piePercent = [];\n  let colorArray = [];\n\n  let dynamicColors = function () {\n    let r = Math.floor(Math.random() * 255);\n    let g = Math.floor(Math.random() * 255);\n    let b = Math.floor(Math.random() * 255);\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  };\n\n  pieData?.map((item) => {\n    labels.push(item.advertiserId);\n    piePercent.push(item.CM001_percent);\n    colorArray.push(dynamicColors());\n  });\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Pie Chart\",\n        backgroundColor: colorArray,\n        data: piePercent,\n      },\n    ],\n  };\n  return (\n    <div className=\"pie\">\n      <p>Pie Chart</p>\n      <div className=\"pie_inner\">\n        <Pie\n          data={data}\n          options={{\n            title: {\n              display: true,\n              text: \"Pie Chart\",\n              fontSize: 20,\n            },\n            legend: {\n              display: true,\n              position: \"right\",\n              labels: {\n                fontSize: 15,\n                fontColor: \"#000\",\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default PieData;\n","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/DatePicker.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/BarData.js",["128","129"],[],"import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport Chart from \"chart.js/auto\";\n\nconst BarData = (props) => {\n  const { barData } = useSelector((state) => state.dashData);\n  let label = [];\n  let dataArray = [];\n\n  barData &&\n    barData.map((item) => {\n      label.push(item.appSiteId);\n      dataArray.push(item.impressions_offered);\n    });\n\n  const data = {\n    labels: label,\n    datasets: [\n      {\n        label: \"Bar Chart\",\n        backgroundColor: \"#EC932F\",\n        borderWidth: 1,\n        data: dataArray,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"pie\">\n      <p>Bar Chart</p>\n      <div className=\"pie_inner\">\n        <Bar\n          data={data}\n          width={100}\n          height={50}\n          options={{\n            title: {\n              display: true,\n              text: \"Bar Chart\",\n              fontSize: 16,\n            },\n            legend: {\n              display: true,\n              position: \"right\",\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default BarData;\n","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Component/TableData.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/DateAction.js",["130","131"],[],"import { toastr } from \"react-redux-toastr\";\nimport JwtService from \"../../JwtService/JwtService\";\nimport {\n  LOGOUT,\n  SET_DATE_RANGE,\n  SET_LOADING_DATE,\n  SET_MIN_MAX_DATE,\n} from \"./ActionType\";\nimport { logout } from \"./UserAction\";\n\nexport const getMinMaxdDate = () => {\n  return (dispatch) => {\n    dispatch({ type: SET_LOADING_DATE });\n    JwtService.post(\"/getDateRange\", {\n      organization: \"DemoTest\",\n      view: \"Auction\",\n    })\n      .then((response) => {\n        dispatch({\n          type: SET_MIN_MAX_DATE,\n          value: response.data.result,\n        });\n      })\n      .catch((error) => {\n        if (error?.response?.status == 401) {\n          dispatch(logout());\n          window.location.href(\"/\");\n          toastr.error(\"\", \"something went wrong\");\n        } else {\n          console.log(\"error\", error);\n        }\n      });\n  };\n};\n\nexport const setDateRange = (value1, value2) => {\n  return (dispatch) => {\n    dispatch({ type: SET_DATE_RANGE, value1, value2 });\n  };\n};\n","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/Combinereducer.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/UserAction.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/DashDataAction.js",["132","133"],[],"import { LOGOUT, SET_DASH_LOADING, SET_DASHBOARD_DATA } from \"./ActionType\";\nimport JwtService from \"../../JwtService/JwtService\";\nimport { tableData, barData, pieData } from \"../../config\";\nimport { toastr } from \"react-redux-toastr\";\nimport { logout } from \"./UserAction\";\n\nexport const getDashBoardData = (startDate, endDate) => {\n  return (dispatch) => {\n    const dateRange = {\n      startDate,\n      endDate,\n    };\n\n    dispatch({ type: SET_DASH_LOADING });\n\n    let tablePayload = {\n      ...tableData,\n      chartObject: {\n        ...tableData.chartObject,\n        requestParam: {\n          ...tableData.chartObject.requestParam,\n          dateRange,\n        },\n      },\n    };\n    let barPayload = {\n      ...barData,\n      chartObject: {\n        ...barData.chartObject,\n        requestParam: {\n          ...barData.chartObject.requestParam,\n          dateRange,\n        },\n      },\n    };\n    let piePayload = {\n      ...pieData,\n      chartObject: {\n        ...pieData.chartObject,\n        requestParam: {\n          ...pieData.chartObject.requestParam,\n          dateRange,\n        },\n      },\n    };\n\n    let table = JwtService.post(\"/getData\", tablePayload);\n    let bar = JwtService.post(\"/getData\", barPayload);\n    let pie = JwtService.post(\"/getData\", piePayload);\n\n    Promise.all([table, bar, pie])\n      .then((res) => {\n        dispatch({ type: SET_DASHBOARD_DATA, value: res });\n      })\n      .catch((error) => {\n        if (error && error.response && error.response.status == 401) {\n          toastr.error(\"\", \"something went wrong\");\n          dispatch(logout());\n          window.location.href = \"/\";\n        } else {\n          console.log(\"error\", error);\n        }\n      });\n  };\n};\n","/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/userReducer.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/config.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/dateReducer.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Action/ActionType.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/JwtService/JwtService.js",[],[],"/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/dashDataReducer.js",[],[],{"ruleId":"134","severity":1,"message":"135","line":26,"column":6,"nodeType":"136","endLine":26,"endColumn":12,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"135","line":26,"column":6,"nodeType":"136","endLine":26,"endColumn":12,"suggestions":"138"},{"ruleId":"134","severity":1,"message":"139","line":32,"column":6,"nodeType":"136","endLine":32,"endColumn":8,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":19,"column":23,"nodeType":"143","messageId":"144","endLine":19,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":13},{"ruleId":"141","severity":1,"message":"142","line":12,"column":24,"nodeType":"143","messageId":"144","endLine":12,"endColumn":26},{"ruleId":"145","severity":1,"message":"149","line":4,"column":3,"nodeType":"147","messageId":"148","endLine":4,"endColumn":9},{"ruleId":"150","severity":1,"message":"151","line":25,"column":37,"nodeType":"152","messageId":"153","endLine":25,"endColumn":39},{"ruleId":"145","severity":1,"message":"149","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":56,"column":62,"nodeType":"152","messageId":"153","endLine":56,"endColumn":64},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["154"],["155"],"React Hook useEffect has missing dependencies: 'data', 'dispatch', and 'navigate'. Either include them or remove the dependency array.",["156"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Chart' is defined but never used.","Identifier","unusedVar","'LOGOUT' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"157","fix":"158"},{"desc":"157","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [data, navigate]",{"range":"162","text":"163"},{"range":"164","text":"163"},"Update the dependencies array to be: [data, dispatch, navigate]",{"range":"165","text":"166"},[744,750],"[data, navigate]",[744,750],[1054,1056],"[data, dispatch, navigate]"]