{"ast":null,"code":"var _jsxFileName = \"/home/rails/Desktop/sigmoid-assignment/src/Component/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMinMaxdDate } from \"../Store/Action/DateAction\";\nimport { Bars } from \"react-loader-spinner\";\nimport DatePicker from \"./DatePicker\";\nimport { Button } from \"@mui/material\";\nimport { logout } from \"../Store/Action/UserAction\";\nimport { getDashBoardData } from \"../Store/Action/DashDataAction\";\nimport TableData from \"./TableData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    isDateLoading,\n    dateRange\n  } = useSelector(state => state.date);\n  const {\n    isDashLoading\n  } = useSelector(state => state.dashData);\n  useEffect(() => {\n    dispatch(getMinMaxdDate());\n  }, []);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/\");\n  };\n\n  const handleData = () => {\n    dispatch(getDashBoardData(dateRange[0].toString(), dateRange[1].toString()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isDateLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bars\",\n      children: /*#__PURE__*/_jsxDEV(Bars, {\n        type: \"Bars\",\n        color: \"#00BFFF\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calender\",\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleData,\n          className: \"btn\",\n          children: \"GET DATA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), isDashLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bars\",\n          children: /*#__PURE__*/_jsxDEV(Bars, {\n            type: \"Bars\",\n            color: \"#00BFFF\",\n            height: 80,\n            width: 80\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this) : tableData.length > 0 && /*#__PURE__*/_jsxDEV(TableData, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"ZjwCDkfYiEK/5l5EU0VI+S0aQGs=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/rails/Desktop/sigmoid-assignment/src/Component/Dashboard.js"],"names":["useEffect","useDispatch","useSelector","useNavigate","getMinMaxdDate","Bars","DatePicker","Button","logout","getDashBoardData","TableData","Dashboard","dispatch","navigate","isDateLoading","dateRange","state","date","isDashLoading","dashData","handleLogout","handleData","toString","tableData","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAEW,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA+Bb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBhB,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACG,QAAlB,CAArC;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACR,cAAc,EAAf,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMgB,YAAY,GAAG,MAAM;AACzBR,IAAAA,QAAQ,CAACJ,MAAM,EAAP,CAAR;AACAK,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAHD;;AAIA,QAAMQ,UAAU,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CACNH,gBAAgB,CAACM,SAAS,CAAC,CAAD,CAAT,CAAaO,QAAb,EAAD,EAA0BP,SAAS,CAAC,CAAD,CAAT,CAAaO,QAAb,EAA1B,CADV,CAAR;AAGD,GAJD;;AAKA,sBACE;AAAA,cACGR,aAAa,gBACZ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,MAAM,EAAE,EAA1C;AAA8C,QAAA,KAAK,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADY,gBAKZ;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEM,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEC,UAArC;AAAiD,UAAA,SAAS,EAAC,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKGH,aAAa,gBACZ;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC,MAAX;AAAkB,YAAA,KAAK,EAAC,SAAxB;AAAkC,YAAA,MAAM,EAAE,EAA1C;AAA8C,YAAA,KAAK,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADY,GAKZK,SAAS,CAACC,MAAV,GAAmB,CAAnB,iBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAV5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AANJ,mBADF;AA4BD,CA9CD;;GAAMb,S;UACaV,W,EACAE,W,EACoBD,W,EACXA,W;;;KAJtBS,S;AA+CN,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMinMaxdDate } from \"../Store/Action/DateAction\";\nimport { Bars } from \"react-loader-spinner\";\nimport DatePicker from \"./DatePicker\";\nimport { Button } from \"@mui/material\";\nimport { logout } from \"../Store/Action/UserAction\";\nimport { getDashBoardData } from \"../Store/Action/DashDataAction\";\nimport TableData from \"./TableData\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isDateLoading, dateRange } = useSelector((state) => state.date);\n  const { isDashLoading } = useSelector((state) => state.dashData);\n  useEffect(() => {\n    dispatch(getMinMaxdDate());\n  }, []);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/\");\n  };\n  const handleData = () => {\n    dispatch(\n      getDashBoardData(dateRange[0].toString(), dateRange[1].toString())\n    );\n  };\n  return (\n    <>\n      {isDateLoading ? (\n        <div className=\"bars\">\n          <Bars type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      ) : (\n        <>\n          <Button variant=\"contained\" onClick={handleLogout}>\n            Logout\n          </Button>\n          <div className=\"calender\">\n            <DatePicker />\n            <Button variant=\"contained\" onClick={handleData} className=\"btn\">\n              GET DATA\n            </Button>\n            {isDashLoading ? (\n              <div className=\"bars\">\n                <Bars type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\n              </div>\n            ) : (\n              tableData.length > 0 && <TableData />\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}