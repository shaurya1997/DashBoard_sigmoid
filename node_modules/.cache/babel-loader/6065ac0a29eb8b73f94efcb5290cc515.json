{"ast":null,"code":"var _jsxFileName = \"/home/rails/Desktop/sigmoid-assignment/src/Component/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from \"../Store/Action/UserAction\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [rememberMe, setRememberMe] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    data,\n    isLoading\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (data || localStorage.getItem(\"access_token\") || sessionStorage.getItem(\"access_token\")) navigate(\"/dashboard\");\n  }, [data]);\n\n  const handleChange = e => {\n    setUser({ ...user,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(loginUser(user.email, user.password, rememberMe));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-heading\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"email\",\n          label: \"Email\",\n          variant: \"outlined\",\n          className: \"label\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          variant: \"outlined\",\n          className: \"label\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            id: \"rememberMe\",\n            checked: rememberMe,\n            onChange: () => setRememberMe(!rememberMe)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: \"remember\",\n            children: \"Remember Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          disabled: isLoading || !user.email || !user.password,\n          onClick: handleSubmit,\n          children: \"Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"m42TRi3qlk/mSXeDSkfzfrm8v6Q=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/rails/Desktop/sigmoid-assignment/src/Component/Login.js"],"names":["Button","Checkbox","TextField","Typography","useEffect","useState","useDispatch","useSelector","loginUser","useNavigate","Login","user","setUser","email","password","rememberMe","setRememberMe","dispatch","navigate","data","isLoading","state","localStorage","getItem","sessionStorage","handleChange","e","target","id","value","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import { Button, Checkbox, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from \"../Store/Action/UserAction\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [rememberMe, setRememberMe] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { data, isLoading } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (\n      data ||\n      localStorage.getItem(\"access_token\") ||\n      sessionStorage.getItem(\"access_token\")\n    )\n      navigate(\"/dashboard\");\n  }, [data]);\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser(user.email, user.password, rememberMe));\n  };\n\n  return (\n    <>\n      <h1 className=\"login-heading\">Login</h1>\n      <div className=\"App\">\n        <form className=\"form\">\n          <TextField\n            id=\"email\"\n            label=\"Email\"\n            variant=\"outlined\"\n            className=\"label\"\n            onChange={handleChange}\n          />\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            variant=\"outlined\"\n            className=\"label\"\n            onChange={handleChange}\n          />\n          <div className=\"checkbox\">\n            <Checkbox\n              id=\"rememberMe\"\n              checked={rememberMe}\n              onChange={() => setRememberMe(!rememberMe)}\n            />\n            <Typography className=\"remember\">Remember Me</Typography>\n          </div>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            disabled={isLoading || !user.email || !user.password}\n            onClick={handleSubmit}\n          >\n            Log in\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}