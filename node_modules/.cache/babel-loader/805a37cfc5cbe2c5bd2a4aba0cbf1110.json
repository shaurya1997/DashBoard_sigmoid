{"ast":null,"code":"var _jsxFileName = \"/home/rails/Desktop/sigmoid-assignment/src/Component/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMinMaxdDate } from \"../Store/Action/DateAction\";\nimport { Bars } from \"react-loader-spinner\";\nimport DatePicker from \"./DatePicker\";\nimport { Button } from \"@mui/material\";\nimport { logout } from \"../Store/Action/UserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    isDateLoading\n  } = useSelector(state => state.date);\n  useEffect(() => {\n    dispatch(getMinMaxdDate());\n  }, []);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isDateLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bars\",\n      children: /*#__PURE__*/_jsxDEV(Bars, {\n        type: \"Bars\",\n        color: \"#00BFFF\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"x1PcdppiuezTG1OdpSm3DA4WzLI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/rails/Desktop/sigmoid-assignment/src/Component/Dashboard.js"],"names":["useEffect","useDispatch","useSelector","useNavigate","getMinMaxdDate","Bars","DatePicker","Button","logout","Dashboard","dispatch","navigate","isDateLoading","state","date","handleLogout"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,MAAT,QAAuB,4BAAvB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAoBV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAArC;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,YAAY,GAAG,MAAM;AACzBL,IAAAA,QAAQ,CAACF,MAAM,EAAP,CAAR;AACAG,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAHD;;AAIA,sBACE;AAAA,cACGC,aAAa,gBACZ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,MAAM,EAAE,EAA1C;AAA8C,QAAA,KAAK,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADY,gBAKZ;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEG,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,mBADF;AAgBD,CA7BD;;GAAMN,S;UACaR,W,EACAE,W,EACSD,W;;;KAHtBO,S;AA8BN,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMinMaxdDate } from \"../Store/Action/DateAction\";\nimport { Bars } from \"react-loader-spinner\";\nimport DatePicker from \"./DatePicker\";\nimport { Button } from \"@mui/material\";\nimport { logout } from \"../Store/Action/UserAction\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { isDateLoading } = useSelector((state) => state.date);\n\n  useEffect(() => {\n    dispatch(getMinMaxdDate());\n  }, []);\n\n  const handleLogout = () => {\n    dispatch(logout());\n    navigate(\"/\");\n  };\n  return (\n    <>\n      {isDateLoading ? (\n        <div className=\"bars\">\n          <Bars type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\n        </div>\n      ) : (\n        <div>\n          <Button variant=\"contained\" onClick={handleLogout}>\n            Logout\n          </Button>\n          <DatePicker />\n        </div>\n      )}\n    </>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}