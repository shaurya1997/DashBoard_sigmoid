{"ast":null,"code":"var _jsxFileName = \"/home/rails/Desktop/sigmoid-assignment/src/Component/PieData.js\",\n    _s = $RefreshSig$();\n\nimport { Pie } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport { Chart, ArcElement } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(ArcElement);\n\nconst PieData = () => {\n  _s();\n\n  const {\n    pieData\n  } = useSelector(state => state.dashData);\n  let labels = [];\n  let piePercent = [];\n  let colorArray = [];\n\n  let dynamicColors = function () {\n    let r = Math.floor(Math.random() * 255);\n    let g = Math.floor(Math.random() * 255);\n    let b = Math.floor(Math.random() * 255);\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  };\n\n  pieData === null || pieData === void 0 ? void 0 : pieData.map(el => {\n    labels.push(el.advertiserId);\n    piePercent.push(el.CM001_percent);\n    colorArray.push(dynamicColors());\n  });\n  const data = {\n    labels,\n    datasets: [{\n      label: \"Pie Chart\",\n      backgroundColor: colorArray,\n      data: piePercent\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      options: {\n        title: {\n          display: true,\n          text: \"Pie Chart\",\n          fontSize: 20\n        } //   legend: {\n        //     display: true,\n        //     position: \"right\",\n        //     labels: {\n        //       fontSize: 15,\n        //       fontColor: \"#000\",\n        //     },\n        //   },\n\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PieData, \"K2dBZb3UqASRIGxEaVS00xDG4sI=\", false, function () {\n  return [useSelector];\n});\n\n_c = PieData;\nexport default PieData;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieData\");","map":{"version":3,"sources":["/home/rails/Desktop/sigmoid-assignment/src/Component/PieData.js"],"names":["Pie","useSelector","Chart","ArcElement","register","PieData","pieData","state","dashData","labels","piePercent","colorArray","dynamicColors","r","Math","floor","random","g","b","map","el","push","advertiserId","CM001_percent","data","datasets","label","backgroundColor","title","display","text","fontSize"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,UAAlC;;;AACAD,KAAK,CAACE,QAAN,CAAeD,UAAf;;AACA,MAAME,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAA/B;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAG,EAAjB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,MAAIC,aAAa,GAAG,YAAY;AAC9B,QAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,QAAIC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,QAAIE,CAAC,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAR;AACA,WAAO,SAASH,CAAT,GAAa,GAAb,GAAmBI,CAAnB,GAAuB,GAAvB,GAA6BC,CAA7B,GAAiC,GAAxC;AACD,GALD;;AAOAZ,EAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEa,GAAT,CAAcC,EAAD,IAAQ;AACnBX,IAAAA,MAAM,CAACY,IAAP,CAAYD,EAAE,CAACE,YAAf;AACAZ,IAAAA,UAAU,CAACW,IAAX,CAAgBD,EAAE,CAACG,aAAnB;AACAZ,IAAAA,UAAU,CAACU,IAAX,CAAgBT,aAAa,EAA7B;AACD,GAJD;AAMA,QAAMY,IAAI,GAAG;AACXf,IAAAA,MADW;AAEXgB,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,WADT;AAEEC,MAAAA,eAAe,EAAEhB,UAFnB;AAGEa,MAAAA,IAAI,EAAEd;AAHR,KADQ;AAFC,GAAb;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AACE,MAAA,IAAI,EAAEc,IADR;AAEE,MAAA,OAAO,EAAE;AACPI,QAAAA,KAAK,EAAE;AACLC,UAAAA,OAAO,EAAE,IADJ;AAELC,UAAAA,IAAI,EAAE,WAFD;AAGLC,UAAAA,QAAQ,EAAE;AAHL,SADA,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAbO;AAFX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAuBD,CApDD;;GAAM1B,O;UACgBJ,W;;;KADhBI,O;AAsDN,eAAeA,OAAf","sourcesContent":["import { Pie } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport { Chart, ArcElement } from \"chart.js\";\nChart.register(ArcElement);\nconst PieData = () => {\n  const { pieData } = useSelector((state) => state.dashData);\n  let labels = [];\n  let piePercent = [];\n  let colorArray = [];\n\n  let dynamicColors = function () {\n    let r = Math.floor(Math.random() * 255);\n    let g = Math.floor(Math.random() * 255);\n    let b = Math.floor(Math.random() * 255);\n    return \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n  };\n\n  pieData?.map((el) => {\n    labels.push(el.advertiserId);\n    piePercent.push(el.CM001_percent);\n    colorArray.push(dynamicColors());\n  });\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Pie Chart\",\n        backgroundColor: colorArray,\n        data: piePercent,\n      },\n    ],\n  };\n  return (\n    <>\n      <p>Pie Chart</p>\n      <Pie\n        data={data}\n        options={{\n          title: {\n            display: true,\n            text: \"Pie Chart\",\n            fontSize: 20,\n          },\n          //   legend: {\n          //     display: true,\n          //     position: \"right\",\n          //     labels: {\n          //       fontSize: 15,\n          //       fontColor: \"#000\",\n          //     },\n          //   },\n        }}\n      />\n    </>\n  );\n};\n\nexport default PieData;\n"]},"metadata":{},"sourceType":"module"}