{"ast":null,"code":"var _jsxFileName = \"/home/rails/Desktop/sigmoid-assignment/src/Component/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMinMaxdDate } from \"../Store/Action/DateAction\";\nimport { Bars } from \"react-loader-spinner\";\nimport DatePicker from \"./DatePicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    isDateLoading\n  } = useSelector(state => state.date);\n  useEffect(() => {\n    dispatch(getMinMaxdDate());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isDateLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Bars, {\n        type: \"Bars\",\n        color: \"#00BFFF\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Dashboard, \"VDgBqZzwW7OXoWb1LMgJ/2VInKI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/rails/Desktop/sigmoid-assignment/src/Component/Dashboard.js"],"names":["useEffect","useDispatch","useSelector","useNavigate","getMinMaxdDate","Bars","DatePicker","Dashboard","dispatch","isDateLoading","state","date"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAoBP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAArC;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACJ,cAAc,EAAf,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,cACGK,aAAa,gBACZ;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,KAAK,EAAC,SAAxB;AAAkC,QAAA,MAAM,EAAE,EAA1C;AAA8C,QAAA,KAAK,EAAE;AAArD;AAAA;AAAA;AAAA;AAAA;AADF,qBADY,gBAKZ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AANJ,mBADF;AAWD,CAnBD;;GAAMF,S;UACaN,W,EACSC,W;;;KAFtBK,S;AAoBN,eAAeA,SAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getMinMaxdDate } from \"../Store/Action/DateAction\";\nimport { Bars } from \"react-loader-spinner\";\nimport DatePicker from \"./DatePicker\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch();\n  const { isDateLoading } = useSelector((state) => state.date);\n\n  useEffect(() => {\n    dispatch(getMinMaxdDate());\n  }, []);\n\n  return (\n    <>\n      {isDateLoading ? (\n        <>\n          <Bars type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\n        </>\n      ) : (\n        <DatePicker />\n      )}\n    </>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}