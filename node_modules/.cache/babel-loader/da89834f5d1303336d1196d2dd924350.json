{"ast":null,"code":"var _jsxFileName = \"/home/rails/Desktop/sigmoid-assignment/src/Component/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Checkbox, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from \"../Store/Action/UserAction\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [rememberMe, setRememberMe] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    data\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    if (data || localStorage.getItem(\"accesstoken\") || sessionStorage.getItem(\"accesstoken\")) navigate(\"/dashboard\");\n  }, [data]);\n\n  const handleChange = e => {\n    setUser({ ...user,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(loginUser(user.email, user.password, rememberMe));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"email\",\n        label: \"Email\",\n        variant: \"outlined\",\n        className: \"label\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        variant: \"outlined\",\n        className: \"label\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          id: \"rememberMe\",\n          checked: rememberMe,\n          onChange: () => setRememberMe(!rememberMe)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: \"remember\",\n          children: \"Remember Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        disabled: !user.email || !user.password,\n        onClick: handleSubmit,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"B0iq9qJQNc+Jlk9nb0W6rcANg2Q=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/rails/Desktop/sigmoid-assignment/src/Component/Login.js"],"names":["Button","Checkbox","TextField","Typography","useEffect","useState","useDispatch","useSelector","loginUser","useNavigate","Login","user","setUser","email","password","rememberMe","setRememberMe","dispatch","navigate","data","state","localStorage","getItem","sessionStorage","handleChange","e","target","id","value","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import { Button, Checkbox, TextField, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginUser } from \"../Store/Action/UserAction\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [rememberMe, setRememberMe] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { data } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (\n      data ||\n      localStorage.getItem(\"accesstoken\") ||\n      sessionStorage.getItem(\"accesstoken\")\n    )\n      navigate(\"/dashboard\");\n  }, [data]);\n\n  const handleChange = (e) => {\n    setUser({ ...user, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(loginUser(user.email, user.password, rememberMe));\n  };\n\n  return (\n    <div className=\"App\">\n      <form className=\"form\">\n        <TextField\n          id=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          className=\"label\"\n          onChange={handleChange}\n        />\n        <TextField\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          variant=\"outlined\"\n          className=\"label\"\n          onChange={handleChange}\n        />\n        <div className=\"checkbox\">\n          <Checkbox\n            id=\"rememberMe\"\n            checked={rememberMe}\n            onChange={() => setRememberMe(!rememberMe)}\n          />\n          <Typography className=\"remember\">Remember Me</Typography>\n        </div>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          disabled={!user.email || !user.password}\n          onClick={handleSubmit}\n        >\n          Log in\n        </Button>\n      </form>\n    </div>\n  );\n};\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}