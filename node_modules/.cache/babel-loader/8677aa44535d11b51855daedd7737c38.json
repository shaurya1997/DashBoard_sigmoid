{"ast":null,"code":"import { SET_LOADING_DATE, SET_MIN_MAX_DATE, SET_DATE_RANGE } from \"../Action/ActionType\";\nconst initialState = {\n  minDate: \"\",\n  maxDate: \"\",\n  isDateLoading: false,\n  dateRange: []\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_MIN_MAX_DATE:\n      return { ...state,\n        minDate: action.value.startDate,\n        maxDate: action.value.endDate,\n        dateRange: [new Date(parseInt(action.value.startDate)), new Date(parseInt(action.value.endDate))],\n        isDateLoading: false\n      };\n\n    case SET_LOADING_DATE:\n      {\n        return { ...state,\n          isDateLoading: true\n        };\n      }\n\n    case SET_DATE_RANGE:\n      {\n        return { ...state,\n          dateRange: [action.value[0], action.value[1]]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/rails/Desktop/sigmoid-assignment/src/Store/Reducer/dateReducer.js"],"names":["SET_LOADING_DATE","SET_MIN_MAX_DATE","SET_DATE_RANGE","initialState","minDate","maxDate","isDateLoading","dateRange","userReducer","state","action","type","value","startDate","endDate","Date","parseInt"],"mappings":"AAAA,SACEA,gBADF,EAEEC,gBAFF,EAGEC,cAHF,QAIO,sBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,aAAa,EAAE,KAHI;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,OAAO,EAAEM,MAAM,CAACE,KAAP,CAAaC,SAFjB;AAGLR,QAAAA,OAAO,EAAEK,MAAM,CAACE,KAAP,CAAaE,OAHjB;AAILP,QAAAA,SAAS,EAAE,CACT,IAAIQ,IAAJ,CAASC,QAAQ,CAACN,MAAM,CAACE,KAAP,CAAaC,SAAd,CAAjB,CADS,EAET,IAAIE,IAAJ,CAASC,QAAQ,CAACN,MAAM,CAACE,KAAP,CAAaE,OAAd,CAAjB,CAFS,CAJN;AAQLR,QAAAA,aAAa,EAAE;AARV,OAAP;;AAUF,SAAKN,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGS,KADE;AAELH,UAAAA,aAAa,EAAE;AAFV,SAAP;AAID;;AACD,SAAKJ,cAAL;AAAqB;AACnB,eAAO,EACL,GAAGO,KADE;AAELF,UAAAA,SAAS,EAAE,CAACG,MAAM,CAACE,KAAP,CAAa,CAAb,CAAD,EAAkBF,MAAM,CAACE,KAAP,CAAa,CAAb,CAAlB;AAFN,SAAP;AAID;;AACD;AACE,aAAOH,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,WAAf","sourcesContent":["import {\n  SET_LOADING_DATE,\n  SET_MIN_MAX_DATE,\n  SET_DATE_RANGE,\n} from \"../Action/ActionType\";\n\nconst initialState = {\n  minDate: \"\",\n  maxDate: \"\",\n  isDateLoading: false,\n  dateRange: [],\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_MIN_MAX_DATE:\n      return {\n        ...state,\n        minDate: action.value.startDate,\n        maxDate: action.value.endDate,\n        dateRange: [\n          new Date(parseInt(action.value.startDate)),\n          new Date(parseInt(action.value.endDate)),\n        ],\n        isDateLoading: false,\n      };\n    case SET_LOADING_DATE: {\n      return {\n        ...state,\n        isDateLoading: true,\n      };\n    }\n    case SET_DATE_RANGE: {\n      return {\n        ...state,\n        dateRange: [action.value[0], action.value[1]],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}