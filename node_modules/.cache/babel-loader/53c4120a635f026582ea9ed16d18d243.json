{"ast":null,"code":"import { SET_DASH_LOADING, SET_DASHBOARD_DATA } from \"../Action/ActionType\";\nconst initialState = {\n  isDashLoading: false,\n  tableData: [],\n  barData: [],\n  pieData: []\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DASH_LOADING:\n      {\n        return { ...state,\n          isDashLoading: true\n        };\n      }\n\n    case SET_DASHBOARD_DATA:\n      {\n        return { ...state,\n          isDashLoading: false,\n          tableData: action.value[0].data.result.data,\n          barData: action.value[1].data.result.data,\n          pieData: action.value[2].data.result.data\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/rails/Desktop/DashBoard_sigmoid/sigmoid-assignment/src/Store/Reducer/dashDataReducer.js"],"names":["SET_DASH_LOADING","SET_DASHBOARD_DATA","initialState","isDashLoading","tableData","barData","pieData","userReducer","state","action","type","value","data","result"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,kBAA3B,QAAqD,sBAArD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,OAAO,EAAE,EAHU;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,gBAAL;AAAuB;AACrB,eAAO,EACL,GAAGQ,KADE;AAELL,UAAAA,aAAa,EAAE;AAFV,SAAP;AAID;;AACD,SAAKF,kBAAL;AAAyB;AACvB,eAAO,EACL,GAAGO,KADE;AAELL,UAAAA,aAAa,EAAE,KAFV;AAGLC,UAAAA,SAAS,EAAEK,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBC,IAAhB,CAAqBC,MAArB,CAA4BD,IAHlC;AAILP,UAAAA,OAAO,EAAEI,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBC,IAAhB,CAAqBC,MAArB,CAA4BD,IAJhC;AAKLN,UAAAA,OAAO,EAAEG,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBC,IAAhB,CAAqBC,MAArB,CAA4BD;AALhC,SAAP;AAOD;;AAED;AACE,aAAOJ,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,eAAeD,WAAf","sourcesContent":["import { SET_DASH_LOADING, SET_DASHBOARD_DATA } from \"../Action/ActionType\";\n\nconst initialState = {\n  isDashLoading: false,\n  tableData: [],\n  barData: [],\n  pieData: [],\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DASH_LOADING: {\n      return {\n        ...state,\n        isDashLoading: true,\n      };\n    }\n    case SET_DASHBOARD_DATA: {\n      return {\n        ...state,\n        isDashLoading: false,\n        tableData: action.value[0].data.result.data,\n        barData: action.value[1].data.result.data,\n        pieData: action.value[2].data.result.data,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}